(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{123:function(e,t,n){"use strict";var r=n(1);Object.defineProperty(t,"__esModule",{value:!0});var a=n(124),o=Object.prototype.hasOwnProperty,i=Array.prototype.splice,c=Object.prototype.toString;function u(e){return c.call(e).slice(8,-1)}var s=Object.assign||function(e,t){return p(t).forEach(function(n){o.call(t,n)&&(e[n]=t[n])}),e},p="function"==typeof Object.getOwnPropertySymbols?function(e){return Object.keys(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.keys(e)};function f(e){return Array.isArray(e)?s(e.constructor(e.length),e):"Map"===u(e)?new Map(e):"Set"===u(e)?new Set(e):e&&"object"===r(e)?s(Object.create(Object.getPrototypeOf(e)),e):e}var d=function(){function e(){this.commands=s({},l),this.update=this.update.bind(this),this.update.extend=this.extend=this.extend.bind(this),this.update.isEquals=function(e,t){return e===t},this.update.newContext=function(){return(new e).update}}return Object.defineProperty(e.prototype,"isEquals",{get:function(){return this.update.isEquals},set:function(e){this.update.isEquals=e},enumerable:!0,configurable:!0}),e.prototype.extend=function(e,t){this.commands[e]=t},e.prototype.update=function(e,t){var n=this,i="function"==typeof t?{$apply:t}:t;Array.isArray(e)&&Array.isArray(i)||a(!Array.isArray(i),"update(): You provided an invalid spec to update(). The spec may not contain an array except as the value of $set, $push, $unshift, $splice or any custom command allowing an array value."),a("object"===r(i)&&null!==i,"update(): You provided an invalid spec to update(). The spec and every included key path must be plain objects containing one of the following commands: %s.",Object.keys(this.commands).join(", "));var c=e;return p(i).forEach(function(t){if(o.call(n.commands,t)){var r=e===c;c=n.commands[t](i[t],c,i,e),r&&n.isEquals(c,e)&&(c=e)}else{var a="Map"===u(e)?n.update(e.get(t),i[t]):n.update(e[t],i[t]),s="Map"===u(c)?c.get(t):c[t];n.isEquals(a,s)&&(void 0!==a||o.call(e,t))||(c===e&&(c=f(e)),"Map"===u(c)?c.set(t,a):c[t]=a)}}),c},e}();t.Context=d;var l={$push:function(e,t,n){return h(t,n,"$push"),e.length?t.concat(e):t},$unshift:function(e,t,n){return h(t,n,"$unshift"),e.length?e.concat(t):t},$splice:function(e,t,n,r){return function(e,t){a(Array.isArray(e),"Expected $splice target to be an array; got %s",e),b(t.$splice)}(t,n),e.forEach(function(e){b(e),t===r&&e.length&&(t=f(r)),i.apply(t,e)}),t},$set:function(e,t,n){return function(e){a(1===Object.keys(e).length,"Cannot have more than one key in an object with $set")}(n),e},$toggle:function(e,t){g(e,"$toggle");var n=e.length?f(t):t;return e.forEach(function(e){n[e]=!t[e]}),n},$unset:function(e,t,n,r){return g(e,"$unset"),e.forEach(function(e){Object.hasOwnProperty.call(t,e)&&(t===r&&(t=f(r)),delete t[e])}),t},$add:function(e,t,n,r){return m(t,"$add"),g(e,"$add"),"Map"===u(t)?e.forEach(function(e){var n=e[0],a=e[1];t===r&&t.get(n)!==a&&(t=f(r)),t.set(n,a)}):e.forEach(function(e){t!==r||t.has(e)||(t=f(r)),t.add(e)}),t},$remove:function(e,t,n,r){return m(t,"$remove"),g(e,"$remove"),e.forEach(function(e){t===r&&t.has(e)&&(t=f(r)),t.delete(e)}),t},$merge:function(e,t,n,o){var i,c;return i=t,a((c=e)&&"object"===r(c),"update(): $merge expects a spec of type 'object'; got %s",c),a(i&&"object"===r(i),"update(): $merge expects a target of type 'object'; got %s",i),p(e).forEach(function(n){e[n]!==t[n]&&(t===o&&(t=f(o)),t[n]=e[n])}),t},$apply:function(e,t){var n;return a("function"==typeof(n=e),"update(): expected spec of $apply to be a function; got %s.",n),e(t)}},y=new d;function h(e,t,n){a(Array.isArray(e),"update(): expected target of %s to be an array; got %s.",n,e),g(t[n],n)}function g(e,t){a(Array.isArray(e),"update(): expected spec of %s to be an array; got %s. Did you forget to wrap your parameter in an array?",t,e)}function b(e){a(Array.isArray(e),"update(): expected spec of $splice to be an array of arrays; got %s. Did you forget to wrap your parameters in an array?",e)}function m(e,t){var n=u(e);a("Map"===n||"Set"===n,"update(): %s expects a target of type Set or Map; got %s",t,n)}t.isEquals=y.update.isEquals,t.extend=y.extend,t.default=y.update,t.default.default=e.exports=s(t.default,t)},124:function(e,t,n){"use strict";e.exports=function(e,t,n,r,a,o,i,c){if(!e){var u;if(void 0===t)u=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,r,a,o,i,c],p=0;(u=new Error(t.replace(/%s/g,function(){return s[p++]}))).name="Invariant Violation"}throw u.framesToPop=1,u}}}}]);